
Format of entities in RAM:

fopAcM_prm_class (created and returned by f_op_actor_mng::fopAcM_CreateAppend)
000,4: Parameters.
010,2: Auxilary parameter.
012,2: Y rotation.
014,2: Auxilary parameter 2.
016,2: "Enemy number" from the ACTR data
018,1: X scale.
019,1: Y scale.
01A,1: Z scale.
01B,1: Actor GBA type.
020,1: Actor subtype index.
021,1: Room number.
03C,4: Unique ID of this specific entity instance.
  This entity can be found by calling fopAcM_SearchByID__FUiPP10fopAc_ac_c with r3=this ID.
048,4: Pointer to a callback function?
04C,4: Pointer to a callback function?

fopAc_ac_c (entity created by f_op_actor_mng::createAppend):
Size: 0x290 bytes.
004,4: Unique ID of this specific entity instance.
  This entity can be found by calling fopAcM_SearchByID__FUiPP10fopAc_ac_c with r3=this ID.
008,2: Actor ID.
0B0,4: Parameters.
0EC,4: Pointer to something in the loaded REL file for this entity?
  Go to this pointer+8, and read the pointer there. That has a pointer to the execute code for this entity.
0F0,4: Pointer to the game heap memory allocated for this entity by fopAcM_entrySolidHeap? (instance of JKRHeap)
  This pointer is 0x10 bytes after the start of the free space block that was chosen for this entity.
0FC,2: Event index for this actor to trigger.
18C,8: Color C0
194,4: Color K0
198,4: Color K1
19C,8: Fog color
1BC,2: "Enemy number" from the ACTR data
1C1,1: Actor subtype index.
1C2,1: Actor GBA type.
1C4,4: Bitfield?
  & 00000020 - should be drawn on minimap
  & 00000100 - used by miniblins
  & 04000000 - Is a boss or mini-boss (?)
1D0,4: Desired X pos to gradually move towards...?
1D4,4: Desired Y pos to gradually move towards...?
1D8,4: Desired Z pos to gradually move towards...?
1DC,2: Auxilary parameter.
1DE,2: Y rotation.
1E0,2: Auxilary parameter 2.
1E2,1: Room number.
1F0,2: Auxilary parameter. (duplicate?)
1F2,
1F4,2: Auxilary parameter 2. (duplicate?)
1F6,1: Room number.
1F8,4: X pos.
1FC,4: Y pos.
200,4: Z pos.
204,2: Auxilary parameter. (duplicate?)
206,2: Y rotation. (duplicate?)
208,2: Auxilary parameter 2. (duplicate?)
20A,1: Room number.
20C,2: Auxilary parameter or X rotation??
20E,2: Y rotation. (duplicate?)
210,2: Auxilary parameter 2 or Z rotation??
214,4: X scale.
218,4: Y scale.
21C,4: Z scale.
220,4: X velocity.
224,4: Y velocity.
228,4: Z velocity.
254,4: Forward velocity.
  fopAcM_calcSpeed uses this value and the Y rotation value at 206,2 to calculate what this actor's X and Z velocity should be.
258,4: Gravity. (Y acceleration.)
25C,4: Terminal velocity. (Minimum Y velocity.)
284,1: Max HP.
285,1: Current HP.

enemyice (passed to enemy_ice(enemyice *) for enemy status effect handling):
004,2: Total number of frames the enemy should stay frozen.
  The enemy's code sets this value when hit by ice arrows, then enemy_ice(enemyice *) sees that, resets this value to zero, and sets 00E,2 to this value instead.
006,1: Number of frames this enemy has been dying to light arrows so far.
  The enemy's code sets this value to 1 when hit by light arrows, then enemy_ice(enemyice *) increases it by 1 per frame.
00E,2: Number of frames left the enemy should stay frozen.
  enemy_ice(enemyice *) decreases this by 1 per frame.
1B1,1: Death switch index.

???:
328,4: Pointer to the entity's model data?
  In the model data, the pointer at offset 2C points to the model's list of joints?
  8153AC58 - list of joints for link
  each joint is 0x64 bytes
3B8,2: Y rotational velocity.

For item entities:
630,4: Item pickup flag.
63A,1: Item ID.
648,4: Prerequisite switch index.
  This item will not appear until this switch index is set.
    read at 800F5298
667,1: unknown_2
    read at 800F51B0
    if this is 3 or 1, set bit 02 of bitfield entity+669
668,1: Item action.
    read at 800F51D4
    read at 800F8568
    read at 800F8684 for a switch statement
669,1: bitfield?
66A,1: Current mode of the item.
  0 - Normal. (mode_wait_init)
  1 - ? Duplicate of normal mode? Unused?
  2 - In water. (mode_water_init)
66B,1: maybe the item's current state?

For treasure chest entities:
3F0,2: Bitfield.
  & 0001 - This bit means the chest is still hidden (because its appear condition hasn't been met yet)
  & 0002 - This bit might also be related to the chest being hidden somehow
  & 0004 - This bit might also be related to the chest being hidden somehow
76C,1: The treasure chest opened flag index.
  F - For tingle statue chests. This special value means the chest will not appear on the dungeon map with the compass until you have revealed the chest.

For the player:
0290,1: The player's current attack state.
  0 - Not attacking
  1 - Attacking with sword while locked on
  4 - Attacking with sword while not locked on
  8 - Spin attacking
  A - Jump attacking
029C,4: Bitfield
  02000000 - Player is currently wearing the iron boots.
02A0,4: Bitfield
  00000008 - Player is in their casual clothes.
  00000800 - Player is frozen as a solid block of ice?
  00040000 - ?? set automatically after 00000800 is set?
02A4,4: Bitfield
  00000080 - ?? maybe about to use an equipped item?
  00200000 - Player's mirror shield is currently reflecting light.
0314,4: The current action index. e.g. 11 (0xB) for 011get_item.
032C,4: Pointer to Link's main cl.bdl model.
0330,4: Pointer to Link's katsura.bdl model.
0334,4: Pointer to Link's yamu.bdl model.
0954,4: Pointer to Link's hands.bdl model.
095C,4: Pointer to Link's swgripa.bdl model.
0960,4: Pointer to Link's swgripms.bdl model.
097C,4: Pointer to Link's podms.bdl model.
0984,4: Pointer to Link's sha.bdl model.
0988,4: Pointer to Link's shms.bdl model.
2E7C,4: Pointer to Link's ymsls00.bdl model.
2E84,4: Pointer to Link's hboots.bdl model (either left or right foot, not sure which).
2E88,4: Pointer to Link's hboots.bdl model (either left or right foot, not sure which).
2E8C,4: Pointer to Link's pring.bdl model.
2F14,4: Pointer to Link's suimen_munya.bdl model.
2F1C,4: Pointer to Link's yuchw00.bdl model.
2F38,4: Pointer to Link's ybafo00.bdl model.
2F8C,4: Pointer to Link's ymgcs00.bdl model.
0338,4: Pointer to ???
0554,2: The index of the face the player is currently colliding with.
  This is an index in the currently loaded .dzb file's list of faces.
25BC,4: The player's true speed?
34C8,1: Bitfield of pressed buttons.
  01 - A
  02 - B
  04 - X
  08 - Y
  10 - Z
  20 - L
  40 - R
34D4,2: Rotational velocity? Used by procRopeHangWait_init and procRopeHangWait
3560,2: What item the player is holding in their hand.
  00-FF - The item ID of the item.
  0100 - No item.
  0101 - ?
  0103 - ?
  010B - ?
3562,2: Item in hand like above, but when throwing the boomerang this value will still have the boomerang's ID in it, while the above will not.
3584,4: "AttributeCode"? seems to be something from the level polygon that the player is currently standing on.
  called "Attrib ID" in DZB-i-Fy
  related to taking damage from lava maybe? This is passed as argument r5 to checkLavaFace (but only when the value is 6 or 8?)

For enemies:
[Varies]+14,1: Damage for this enemy to do.
  [Varies] depends on the enemy. To determine what it is for a particular enemy, find where it calls 80242D04 and check r4. That has the varying pointer.
  The [Varies] seems to be an instance of cCcD_Obj

For weapons:
010,4: Bitfield of damage types this weapon does.
  00000002 - Sword.
  00000008 - Enemy weapon wielded by an enemy?
  00000020 - Bombs.
  00000040 - Boomerang.
  00000080 - Boko stick.
  00000100 - ? (checked by bomb flowers, boko sticks)
  00000200 - fire? (checked by warp pots, wooden fences) (on for red bubbles)
  00000400 - Bokoblin scimitar.
  00000800 - ? (winged mothulas do this type of damage)
  00004000 - Normal arrows.
  00008000 - Hookshot.
  00010000 - Skull hammer. (also Darknut sword, while wielded by a Darknut?)
  00020000 - ? (checked by warp pots, wooden fences)
  00040000 - Fire arrows.
  00080000 - Ice arrows.
  00100000 - Light arrows.
  00200000 - Deku Leaf's wind.
  00400000 - Maybe another type of wind?
  01000000 - Stalfos mace.
  04000000 - Darknut sword.
  08000000 - Grappling hook.
  10000000 - Moblin spear.
  20000000 - Phantom Ganon sword.
  These weapon entities seem to be instances of cCcD_Obj as well

For the enemy HP bar entity:
58C,4: Width of the red HP bar? In pixels, maybe?

For magic meter entity:
3016,2: How full the meter is, from 0 to decimal 10000.

For KoRL:
34E,1: Current ship mode.
  0 - Idle.
  1 - Sailing.
  2 - Cannon out.
  3 - Salvage arm out.

For doors:
2A0,1: This is 0 if you're in front of the door (can see the lock), or 1 if you're behind the door.
  This is set by frontCheck__12dDoor_info_cFv

For Zunari:
788,4: State?
  -1 = On the left side of his stall
  0 = On the right side of his stall

Model format (J3DModel):
18,04: X scale.
1C,04: Y scale.
20,04: Z scale.
24,30: Base transform matrix.
8C,04: Pointer to a list of the matrices for each of the model's joints.
  The index in the list of matrices is simply the joint index.
  e.g. For joint 0xF, the offset in that list would be 0xF*0x30 = 0x2D0.

Model entity format?:
070,4: Something texture related
074,4: Something texture related
  these two values are used by Ajav to copy the first model's texture to the other 5 models in the function daObjAjav::Act_c::set_tex( (void))

Bounding box(?) format:
(Bounding boxes are created by calling dBgS_Acch::__ct(void) with r3 equal to the pointer to where the entity should be, which is at a variable location within the entity's RAM depending on what class of entity it is.)
094,4: Floating point Y position of the floor below this entity.

