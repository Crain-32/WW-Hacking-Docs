
Format of entities in RAM:

000,4: Parameters.
004,4: ID of this specific entity?
  This entity can be found by calling fopAcM_SearchByID__FUiPP10fopAc_ac_c with r3=this ID?
010,2: X rotation?
012,2: Y rotation?
014,2: Z rotation?
018,1: X scale.
019,1: Y scale.
01A,1: Z scale.
01B,1: Actor unknown value 0xB
020,1: Actor subtype index.
021,1: Room index.
03C,4: ID of this specific entity?
  This entity can be found by calling fopAcM_SearchByID__FUiPP10fopAc_ac_c with r3=this ID?
048,4: Pointer to a callback function?
04C,4: Pointer to a callback function?

Append entity?:
008,2: Actor ID.
0B0,4: Parameters.
0EC,4: Pointer to something in the loaded REL file for this entity?
  Go to this pointer+8, and read the pointer there. That has a pointer to the execute code for this entity.
1C1,1: Actor subtype index.
1C2,1: Actor unknown value 0xB
1D0,4: Desired X pos to gradually move towards...?
1D4,4: Desired Y pos to gradually move towards...?
1D8,4: Desired Z pos to gradually move towards...?
1DC,2: Auxilary parameter.
1DE,2: Y rotation.
1E0,2: Auxilary parameter 2.
1E2,1: Room index?
1F6,1: Room index?
1F8,4: X pos.
1FC,4: Y pos.
200,4: Z pos.
204,2: Auxilary parameter. (duplicate?)
206,2: Y rotation. (duplicate?)
208,2: Auxilary parameter 2. (duplicate?)
20A,1: Room index?
20C,2: Auxilary parameter. (duplicate?)
20E,2: Y rotation. (duplicate?)
210,2: Auxilary parameter 2. (duplicate?)
214,4: X scale.
218,4: Y scale.
21C,4: Z scale.
220,4: X velocity.
224,4: Y velocity.
228,4: Z velocity.
254,4: Current speed?
258,4: Gravity.
25C,4: Terminal velocity. (Minimum Y velocity.)
284,1: Max HP.
285,1: Current HP.
328,4: Pointer to the entity's model data?
  In the model data, the pointer at offset 2C points to the model's list of joints?
  8153AC58 - list of joints for link
  each joint is 0x64 bytes
3B8,2: Y rotational velocity.

For item entities:
630,4: Item pickup flag.
63A,1: Item ID.
648,4: Prerequisite switch index.
  This item will not appear until this switch index is set.
    read at 800F5298
667,1: unknown_2
    read at 800F51B0
    if this is 3 or 1, set bit 02 of bitfield entity+669
668,1: Item action.
    read at 800F51D4
    read at 800F8568
    read at 800F8684 for a switch statement
669,1: bitfield?

For treasure chest entities:
3F0,2: Bitfield.
  & 0001 - This bit means the chest is still hidden (because its appear condition hasn't been met yet)
  & 0002 - This bit might also be related to the chest being hidden somehow
  & 0004 - This bit might also be related to the chest being hidden somehow
76C,1: The treasure chest opened flag index.
  F - For tingle statue chests. This special value means the chest will not appear on the dungeon map with the compass until you have revealed the chest.

For the player:
290,1: This is related to whether the player is currently attacking?
  0 - Not attacking
  1 - Attacking with sword while locked on
  4 - Attacking with sword while not locked on
  8 - Spin attacking
  A - Jump attacking
29C,4: Bitfield
  02000000 - Player is currently wearing the iron boots.
2A4,4: Bitfield
  00200000 - Player's mirror shield is currently reflecting light.
314,4: The current action index. e.g. 11 (0xB) for 011get_item.
554,2: The index of the face the player is currently colliding with.
  This is an index in the currently loaded .dzb file's list of faces.
25BC,4: The player's true speed?
34D4,2: Rotational velocity? Used by procRopeHangWait_init and procRopeHangWait
3560,2: What item the player is holding in their hand.
  00-FF - The item ID of the item.
  0100 - No item.
  010B - ?
3562,2: Item in hand, same as above? Not sure how it's different.
3584,4: "AttributeCode"? seems to be something from the level polygon that the player is currently standing on.
  called "Attrib ID" in DZB-i-Fy
  related to taking damage from lava maybe? This is passed as argument r5 to checkLavaFace (but only when the value is 6 or 8?)

For enemies:
[Varies]+14,1: Damage for this enemy to do.
  [Varies] depends on the enemy. To determine what it is for a particular enemy, find where it calls 80242D04 and check r4. That has the varying pointer.

For weapons:
010,4: Bitfield of damage types this weapon does.
  00000002 - Sword.
  00000020 - Bombs.
  00000040 - Boomerang.
  00000100 - ? (checked by bomb flowers, boko sticks)
  00000200 - ? (checked by warp pots)
  00004000 - Normal arrows.
  00008000 - Hookshot.
  00010000 - Skull hammer.
  00020000 - ? (checked by warp pots)
  00040000 - Fire arrows.
  00080000 - Ice arrows.
  00100000 - Light arrows.
  08000000 - Grappling hook.

For the enemy HP bar entity:
58C,4: Width of the red HP bar? In pixels, maybe?

For magic meter entity:
3016,2: How full the meter is, from 0 to decimal 10000.

For KoRL:
34E,1: Current ship mode.
  0 - Idle.
  1 - Sailing.
  2 - Cannon out.
  3 - Salvage arm out.

For doors:
2A0,1: This is 0 if you're in front of the door (can see the lock), or 1 if you're behind the door.
  This is set by frontCheck__12dDoor_info_cFv

Model entity format:
18,4: X scale.
1C,4: Y scale.
20,4: Z scale.
